============================= test session starts ==============================
platform linux -- Python 3.12.11, pytest-8.4.1, pluggy-1.5.0
rootdir: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager
configfile: pytest.ini
testpaths: tests
plugins: asyncio-0.25.3
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function
collected 288 items

tests/01_unit_tests/test_config_manager/test_auto_directory_creation.py . [  0%]
F....F                                                                   [  2%]
tests/01_unit_tests/test_config_manager/test_config_file_protection.py F [  2%]
.FF.                                                                     [  4%]
tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py F [  4%]
FF.F.F

=================================== FAILURES ===================================
___________ TestAutoDirectoryCreation.test_nested_path_auto_creation ___________
tests/01_unit_tests/test_config_manager/test_auto_directory_creation.py:92: in test_nested_path_auto_creation
    assert nested_path.exists()
E   AssertionError: assert False
E    +  where False = exists()
E    +    where exists = PosixPath('/tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0/level1/level2/level3/logs').exists
----------------------------- Captured stdout call -----------------------------
✓ 使用传入的配置路径: /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0/config.yaml
✓ 检测到pytest环境，使用pytest tmp_path: /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0
✓ 开始执行路径替换，test_base_dir: /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0, temp_base: /tmp
✓ 使用当前时间作为first_start_time: 2025-06-28 15:03:54.116068
✓ 开始执行路径替换，test_base_dir: /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0, temp_base: /tmp
✓ 已从生产环境复制配置: /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0/config.yaml -> /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0/src/config/config.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0/src/config/config.yaml 加载
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0/src/config/backup/20250628/150354/config_20250628_150354.yaml
--------------------------- Captured stdout teardown ---------------------------
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_nested_path_auto_creation0/src/config/backup/20250628/150354/config_20250628_150354.yaml
_____________ TestAutoDirectoryCreation.test_windows_path_formats ______________
tests/01_unit_tests/test_config_manager/test_auto_directory_creation.py:182: in test_windows_path_formats
    assert Path(config.paths.backslash_dir).exists()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
src/config_manager/config_node.py:73: in __getattr__
    raise AttributeError(f"'{self.__class__.__name__}' object has no attribute '{name}'")
E   AttributeError: 'ConfigNode' object has no attribute 'backslash_dir'
----------------------------- Captured stdout call -----------------------------
✓ 检测到测试环境，自动启用auto_create: /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0/config.yaml
✓ 使用传入的配置路径: /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0/config.yaml
✓ 检测到pytest环境，使用pytest tmp_path: /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0
✓ 开始执行路径替换，test_base_dir: /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0, temp_base: /tmp
✓ 使用当前时间作为first_start_time: 2025-06-28 15:03:55.654849
✓ 开始执行路径替换，test_base_dir: /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0, temp_base: /tmp
⚠️  更新测试配置路径失败: name 'key' is not defined
尝试创建基本配置文件...
✓ 已创建基本配置文件
✓ 已从生产环境复制配置: /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0/config.yaml -> /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0/src/config/config.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0/src/config/config.yaml 加载
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0/src/config/backup/20250628/150355/config_20250628_150355.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0/src/config/config.yaml 加载
--------------------------- Captured stdout teardown ---------------------------
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_windows_path_formats0/src/config/backup/20250628/150355/config_20250628_150355.yaml
____________ TestConfigFileProtection.test_windows_path_escape_fix _____________
tests/01_unit_tests/test_config_manager/test_config_file_protection.py:48: in test_windows_path_escape_fix
    assert Path(config.base_dir) == Path(tmp_path / 'logs')
E   AssertionError: assert PosixPath('//tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/logs') == PosixPath('/tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/logs')
E    +  where PosixPath('//tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/logs') = Path('//tmp//pytest-of-tony//pytest-88//test_windows_path_escape_fix0//logs')
E    +    where '//tmp//pytest-of-tony//pytest-88//test_windows_path_escape_fix0//logs' = ConfigManager({'project_name': 'TestProject', 'base_dir': '//tmp//pytest-of-tony//pytest-88//test_windows_path_escape_...tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/logs/TestProject/test_experiment/logs/2025-06-28/150355'})}).base_dir
E    +  and   PosixPath('/tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/logs') = Path((PosixPath('/tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0') / 'logs'))
----------------------------- Captured stdout call -----------------------------
✓ 检测到测试环境，自动启用auto_create: /tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/test_config.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/test_config.yaml 加载
配置文件监视器已启动
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/backup/20250628/150355/test_config_20250628_150355.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/test_config.yaml 加载
--------------------------- Captured stdout teardown ---------------------------
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_windows_path_escape_fix0/backup/20250628/150355/test_config_20250628_150355.yaml
_________ TestConfigFileProtection.test_successful_config_can_be_saved _________
tests/01_unit_tests/test_config_manager/test_config_file_protection.py:94: in test_successful_config_can_be_saved
    assert config2.get('project_name') == 'TestProject'
E   AssertionError: assert None == 'TestProject'
E    +  where None = get('project_name')
E    +    where get = ConfigManager({'first_start_time': '2025-06-28T15:03:56.962852', 'config_file_path': '/tmp/pytest-of-tony/pytest-88/te...experiment/tsb_logs/2025-06-28/150356', 'log_dir': '/tmp/tests/test_project/test_experiment/logs/2025-06-28/150356'})}).get
----------------------------- Captured stdout call -----------------------------
配置文件不存在，创建新配置: /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/test_config.yaml
配置文件监视器已启动
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/backup/20250628/150356/test_config_20250628_150356.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/test_config.yaml 加载
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/backup/20250628/150356/test_config_20250628_150356.yaml
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/backup/20250628/150356/test_config_20250628_150356.yaml
✓ 检测到测试环境，自动启用auto_create: /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/test_config.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/test_config.yaml 加载
配置文件监视器已启动
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/backup/20250628/150356/test_config_20250628_150356.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/test_config.yaml 加载
--------------------------- Captured stdout teardown ---------------------------
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_successful_config_can_be_0/backup/20250628/150356/test_config_20250628_150356.yaml
_________ TestConfigFileProtection.test_complex_windows_paths_handling _________
tests/01_unit_tests/test_config_manager/test_config_file_protection.py:122: in test_complex_windows_paths_handling
    assert Path(config.base_dir) == tmp_path / "logs"
E   AssertionError: assert PosixPath('//tmp/pytest-of-tony/pytest-88/test_complex_windows_paths_han0/logs') == (PosixPath('/tmp/pytest-of-tony/pytest-88/test_complex_windows_paths_han0') / 'logs')
E    +  where PosixPath('//tmp/pytest-of-tony/pytest-88/test_complex_windows_paths_han0/logs') = Path('//tmp//pytest-of-tony//pytest-88//test_complex_windows_paths_han0//logs')
E    +    where '//tmp//pytest-of-tony//pytest-88//test_complex_windows_paths_han0//logs' = ConfigManager({'project_name': 'FuturesTradingPL', 'base_dir': '//tmp//pytest-of-tony//pytest-88//test_complex_windows...est-of-tony/pytest-88/test_complex_windows_paths_han0/logs/FuturesTradingPL/test_experiment/logs/2025-06-28/150359'})}).base_dir
----------------------------- Captured stdout call -----------------------------
✓ 检测到测试环境，自动启用auto_create: /tmp/pytest-of-tony/pytest-88/test_complex_windows_paths_han0/test_config.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_complex_windows_paths_han0/test_config.yaml 加载
配置文件监视器已启动
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_complex_windows_paths_han0/backup/20250628/150359/test_config_20250628_150359.yaml
配置已从 /tmp/pytest-of-tony/pytest-88/test_complex_windows_paths_han0/test_config.yaml 加载
--------------------------- Captured stdout teardown ---------------------------
配置已自动备份到 /tmp/pytest-of-tony/pytest-88/test_complex_windows_paths_han0/backup/20250628/150359/test_config_20250628_150359.yaml
__ TestCrossPlatformConfigManagerIntegration.test_single_path_auto_conversion __
tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py:58: in test_single_path_auto_conversion
    assert hasattr(base_dir_value, 'is_multi_platform_config'), "重新加载后base_dir应该是ConfigNode对象"
E   AssertionError: 重新加载后base_dir应该是ConfigNode对象
E   assert False
E    +  where False = hasattr('/tmp', 'is_multi_platform_config')
----------------------------- Captured stdout call -----------------------------
✓ 检测到测试环境，自动启用auto_create: /tmp/tmpv3l324t3/test_single_path.yaml
✓ 使用传入的配置路径: /tmp/tmpv3l324t3/test_single_path.yaml
⚠️  生产配置不存在，尝试更广泛的搜索...
当前工作目录: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager
✓ 找到配置文件: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml
✓ 使用系统临时目录: /tmp/tests/20250628/150401
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
✓ 使用传入的first_start_time: 2025-06-28 15:04:01.384451
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
⚠️  更新测试配置路径失败: name 'key' is not defined
尝试创建基本配置文件...
✓ 已创建基本配置文件
✓ 已从生产环境复制配置: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml -> /tmp/tests/20250628/150401/src/config/config.yaml
配置已从 /tmp/tests/20250628/150401/src/config/config.yaml 加载
配置已自动备份到 /tmp/tests/20250628/150401/src/config/backup/20250628/150401/config_20250628_150401.yaml
自动转换base_dir为多平台格式: {'windows': '\\tmp\\tmpv3l324t3\\persistence_test', 'linux': '/tmp/tmpv3l324t3/persistence_test', 'ubuntu': '/tmp/tmpv3l324t3/persistence_test', 'macos': '/tmp/tmpv3l324t3/persistence_test'}
配置已从 /tmp/tests/20250628/150401/src/config/config.yaml 加载
配置已自动备份到 /tmp/tests/20250628/150401/src/config/backup/20250628/150401/config_20250628_150401.yaml
✓ 检测到测试环境，自动启用auto_create: /tmp/tmpv3l324t3/test_single_path.yaml
✓ 使用传入的配置路径: /tmp/tmpv3l324t3/test_single_path.yaml
⚠️  生产配置不存在，尝试更广泛的搜索...
当前工作目录: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager
✓ 找到配置文件: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml
✓ 使用系统临时目录: /tmp/tests/20250628/150401
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
✓ 使用传入的first_start_time: 2025-06-28 15:04:01.384451
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
⚠️  更新测试配置路径失败: name 'key' is not defined
尝试创建基本配置文件...
✓ 已创建基本配置文件
✓ 已从生产环境复制配置: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml -> /tmp/tests/20250628/150401/src/config/config.yaml
__ TestCrossPlatformConfigManagerIntegration.test_multi_platform_path_setting __
tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py:88: in test_multi_platform_path_setting
    assert hasattr(base_dir_value, 'is_multi_platform_config'), "base_dir应该是ConfigNode对象"
E   AssertionError: base_dir应该是ConfigNode对象
E   assert False
E    +  where False = hasattr('/tmp', 'is_multi_platform_config')
----------------------------- Captured stdout call -----------------------------
✓ 检测到测试环境，自动启用auto_create: /tmp/tmpj6ru42dy/test_multi_platform.yaml
✓ 使用传入的配置路径: /tmp/tmpj6ru42dy/test_multi_platform.yaml
⚠️  生产配置不存在，尝试更广泛的搜索...
当前工作目录: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager
✓ 找到配置文件: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml
✓ 使用系统临时目录: /tmp/tests/20250628/150401
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
✓ 使用传入的first_start_time: 2025-06-28 15:04:01.542055
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
⚠️  更新测试配置路径失败: name 'key' is not defined
尝试创建基本配置文件...
✓ 已创建基本配置文件
✓ 已从生产环境复制配置: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml -> /tmp/tests/20250628/150401/src/config/config.yaml
配置已从 /tmp/tests/20250628/150401/src/config/config.yaml 加载
_ TestCrossPlatformConfigManagerIntegration.test_path_generation_with_cross_platform_base_dir _
tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py:123: in test_path_generation_with_cross_platform_base_dir
    assert expected_base in work_dir
E   AssertionError: assert '/home/tony/cross_platform_logs' in '/tmp/cross_platform_test/test_exp'

During handling of the above exception, another exception occurred:
tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py:128: in test_path_generation_with_cross_platform_base_dir
    assert hasattr(base_dir_value, 'is_multi_platform_config')
E   AssertionError: assert False
E    +  where False = hasattr('/tmp', 'is_multi_platform_config')
----------------------------- Captured stdout call -----------------------------
✓ 检测到测试环境，自动启用auto_create: /tmp/tmpyd6f7xxp/test_path_generation.yaml
✓ 使用传入的配置路径: /tmp/tmpyd6f7xxp/test_path_generation.yaml
⚠️  生产配置不存在，尝试更广泛的搜索...
当前工作目录: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager
✓ 找到配置文件: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml
✓ 使用系统临时目录: /tmp/tests/20250628/150401
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
✓ 使用传入的first_start_time: 2025-06-28 15:04:01.652081
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
⚠️  更新测试配置路径失败: name 'key' is not defined
尝试创建基本配置文件...
✓ 已创建基本配置文件
✓ 已从生产环境复制配置: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml -> /tmp/tests/20250628/150401/src/config/config.yaml
配置已从 /tmp/tests/20250628/150401/src/config/config.yaml 加载
_ TestCrossPlatformConfigManagerIntegration.test_config_persistence_and_reload _
tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py:187: in test_config_persistence_and_reload
    assert hasattr(base_dir_value, 'is_multi_platform_config'), "重新加载后base_dir应该是ConfigNode对象"
E   AssertionError: 重新加载后base_dir应该是ConfigNode对象
E   assert False
E    +  where False = hasattr('/tmp', 'is_multi_platform_config')
----------------------------- Captured stdout call -----------------------------
✓ 检测到测试环境，自动启用auto_create: /tmp/tmpzpv7shh1/test_persistence.yaml
✓ 使用传入的配置路径: /tmp/tmpzpv7shh1/test_persistence.yaml
⚠️  生产配置不存在，尝试更广泛的搜索...
当前工作目录: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager
✓ 找到配置文件: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml
✓ 使用系统临时目录: /tmp/tests/20250628/150401
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
✓ 使用传入的first_start_time: 2025-06-28 15:04:01.832178
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
⚠️  更新测试配置路径失败: name 'key' is not defined
尝试创建基本配置文件...
✓ 已创建基本配置文件
✓ 已从生产环境复制配置: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml -> /tmp/tests/20250628/150401/src/config/config.yaml
自动转换base_dir为多平台格式: {'windows': '\\tmp\\tmpzpv7shh1\\persistence_test', 'linux': '/tmp/tmpzpv7shh1/persistence_test', 'ubuntu': '/tmp/tmpzpv7shh1/persistence_test', 'macos': '/tmp/tmpzpv7shh1/persistence_test'}
配置已从 /tmp/tests/20250628/150401/src/config/config.yaml 加载
配置已自动备份到 /tmp/tests/20250628/150401/src/config/backup/20250628/150401/config_20250628_150401.yaml
✓ 检测到测试环境，自动启用auto_create: /tmp/tmpzpv7shh1/test_persistence.yaml
✓ 使用传入的配置路径: /tmp/tmpzpv7shh1/test_persistence.yaml
⚠️  生产配置不存在，尝试更广泛的搜索...
当前工作目录: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager
✓ 找到配置文件: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml
✓ 使用系统临时目录: /tmp/tests/20250628/150401
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
✓ 使用传入的first_start_time: 2025-06-28 15:04:01.832178
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150401, temp_base: /tmp
⚠️  更新测试配置路径失败: name 'key' is not defined
尝试创建基本配置文件...
✓ 已创建基本配置文件
✓ 已从生产环境复制配置: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml -> /tmp/tests/20250628/150401/src/config/config.yaml
_ TestCrossPlatformConfigManagerIntegration.test_error_handling_in_integration _
tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py:246: in test_error_handling_in_integration
    assert hasattr(base_dir_value, 'is_multi_platform_config'), "空路径应该被转换为ConfigNode对象"
E   AssertionError: 空路径应该被转换为ConfigNode对象
E   assert False
E    +  where False = hasattr('/tmp', 'is_multi_platform_config')
----------------------------- Captured stdout call -----------------------------
✓ 检测到测试环境，自动启用auto_create: /tmp/tmpbj90uq3m/test_error_handling.yaml
✓ 使用传入的配置路径: /tmp/tmpbj90uq3m/test_error_handling.yaml
⚠️  生产配置不存在，尝试更广泛的搜索...
当前工作目录: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager
✓ 找到配置文件: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml
✓ 使用系统临时目录: /tmp/tests/20250628/150402
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150402, temp_base: /tmp
✓ 使用传入的first_start_time: 2025-06-28 15:04:02.005493
✓ 开始执行路径替换，test_base_dir: /tmp/tests/20250628/150402, temp_base: /tmp
⚠️  更新测试配置路径失败: name 'key' is not defined
尝试创建基本配置文件...
✓ 已创建基本配置文件
✓ 已从生产环境复制配置: /mnt/ntfs/ubuntu_data/NutstoreFiles/invest2025/project/config_manager/src/config/config.yaml -> /tmp/tests/20250628/150402/src/config/config.yaml
配置已从 /tmp/tests/20250628/150402/src/config/config.yaml 加载
配置已自动备份到 /tmp/tests/20250628/150402/src/config/backup/20250628/150402/config_20250628_150402.yaml
自动转换base_dir为多平台格式: {'windows': '/tmp', 'linux': '/tmp', 'ubuntu': '/tmp', 'macos': '/tmp'}
配置已从 /tmp/tests/20250628/150402/src/config/config.yaml 加载
=========================== short test summary info ============================
FAILED tests/01_unit_tests/test_config_manager/test_auto_directory_creation.py::TestAutoDirectoryCreation::test_nested_path_auto_creation
FAILED tests/01_unit_tests/test_config_manager/test_auto_directory_creation.py::TestAutoDirectoryCreation::test_windows_path_formats
FAILED tests/01_unit_tests/test_config_manager/test_config_file_protection.py::TestConfigFileProtection::test_windows_path_escape_fix
FAILED tests/01_unit_tests/test_config_manager/test_config_file_protection.py::TestConfigFileProtection::test_successful_config_can_be_saved
FAILED tests/01_unit_tests/test_config_manager/test_config_file_protection.py::TestConfigFileProtection::test_complex_windows_paths_handling
FAILED tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py::TestCrossPlatformConfigManagerIntegration::test_single_path_auto_conversion
FAILED tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py::TestCrossPlatformConfigManagerIntegration::test_multi_platform_path_setting
FAILED tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py::TestCrossPlatformConfigManagerIntegration::test_path_generation_with_cross_platform_base_dir
FAILED tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py::TestCrossPlatformConfigManagerIntegration::test_config_persistence_and_reload
FAILED tests/01_unit_tests/test_config_manager/test_cross_platform_integration.py::TestCrossPlatformConfigManagerIntegration::test_error_handling_in_integration
!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 10 failures !!!!!!!!!!!!!!!!!!!!!!!!!!
=================== 10 failed, 9 passed in 73.60s (0:01:13) ====================
配置已自动备份到 /tmp/tests/20250628/150402/src/config/backup/20250628/150402/config_20250628_150402.yaml
配置已自动备份到 /tmp/tests/20250628/150401/src/config/backup/20250628/150401/config_20250628_150401.yaml
